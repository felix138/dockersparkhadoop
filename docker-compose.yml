services:
  namenode:
    build:
      context: .
      dockerfile: ./namenode/Dockerfile
    container_name: namenode
    restart: always
    networks:
       docker-hadoop-spark_default:
        ipv4_address: 172.19.0.5
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - /c/root/data/namenode:/hadoop/data #mounting C:\root\data to /hadoop/data in the container
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    env_file:
      - ./hadoop.env

  datanode:
    build: 
      context: .
      dockerfile: ./datanode/Dockerfile
    container_name: datanode
    restart: always
    networks:
       docker-hadoop-spark_default:
        ipv4_address: 172.19.0.4
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
      - /c/root/data/datanode:/hadoop/data #mounting C:\root\data to /hadoop/data in the container
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
    ports:
      - "9964:9864"
      - "9966:9866"
    env_file:
      - ./hadoop.env
      
  datanode1:
    build: 
      context: .
      dockerfile: ./datanode/Dockerfile
    container_name: datanode1
    restart: always
    networks:
       docker-hadoop-spark_default:
        ipv4_address: 172.19.0.20
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
      - /c/root/data/datanode1:/hadoop/data #mounting C:\root\data to /hadoop/data in the container
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
    ports:
      - "9974:9864"
      - "9976:9866"
    env_file:
      - ./hadoop.env

  datanode2:
    build: 
      context: .
      dockerfile: ./datanode/Dockerfile
    container_name: datanode2
    restart: always
    networks:
       docker-hadoop-spark_default:
        ipv4_address: 172.19.0.21
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
      - /c/root/data/datanode2:/hadoop/data #mounting C:\root\data to /hadoop/data in the container
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
    ports:
      - "9984:9864"
      - "9986:9866"
    env_file:
      - ./hadoop.env

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    networks:
       docker-hadoop-spark_default:
        ipv4_address: 172.19.0.3
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    networks:
       docker-hadoop-spark_default:
        ipv4_address: 172.19.0.2
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    networks:
       docker-hadoop-spark_default:
        ipv4_address: 172.19.0.6
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env

  spark-master:
    image: bde2020/spark-master:3.0.0-hadoop3.2
    container_name: spark-master
    depends_on:
      - namenode
      - datanode
    networks:
       docker-hadoop-spark_default:
        ipv4_address: 172.19.0.11
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000

  spark-worker-1:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    container_name: spark-worker-1
    command: >
     bash -c '
        cd /opt && \
        rm -f hadoop-3.2.1.tar.gz && \
        wget https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-3.2.1/hadoop-3.2.1.tar.gz && \
        tar xzf hadoop-3.2.1.tar.gz && \
        rm hadoop-3.2.1.tar.gz && \
        rm -rf /opt/hadoop && \
        ln -s /opt/hadoop-3.2.1 /opt/hadoop && \
        export HADOOP_HOME=/opt/hadoop && \
        export PATH="/opt/hadoop/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" && \
        export HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop && \
        echo "Hadoop installation completed" && \
        /bin/bash /worker.sh
      '
    networks:
       docker-hadoop-spark_default:
        ipv4_address: 172.19.0.12
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - /c/root/data/spark:/mnt/data

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    depends_on:
      - namenode
      - datanode
    networks:
       docker-hadoop-spark_default:
        ipv4_address: 172.19.0.7
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    networks:
       docker-hadoop-spark_default:
        ipv4_address: 172.19.0.9
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9870 datanode:9864 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql
    networks:
       docker-hadoop-spark_default:
        ipv4_address: 172.19.0.8

 # presto-coordinator:
  #  image: shawnzhu/prestodb:0.181
   # container_name: presto-coordinator
    #networks:
     #  docker-hadoop-spark_default:
      #  ipv4_address: 172.19.0.10
    #ports:
     # - "8089:8089"
  
  mysql:
    image: bitnami/mysql:latest
    container_name: mysql
    restart: always
    networks:
       docker-hadoop-spark_default:
        ipv4_address: 172.19.0.13
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: my_database
      MYSQL_USER: my_user
      MYSQL_PASSWORD: root
    volumes:
      - /c/root/data/mysql:/bitnami/mysql/data #mounting C:\root\data\mysql to mysql container

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_datanode1:
  hadoop_datanode2:
  hadoop_historyserver:
  mysql_data:
  
networks:
  docker-hadoop-spark_default:
    name: docker-hadoop-spark_default
    external: false
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16